{"version":3,"names":["React","requireNativeComponent","StyleSheet","View","RTCAccessCheckoutTextInput","AccessCheckoutTextInput","props","nativeID","testID","style","placeholder","editable","color","fontFamily","fontSize","otherStyles","flatten","createElement","flex","font"],"sources":["AccessCheckoutTextInput.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  requireNativeComponent,\n  type StyleProp,\n  StyleSheet,\n  View,\n  type ViewStyle,\n} from 'react-native';\nimport type { ColorValue } from 'react-native/Libraries/StyleSheet/StyleSheet';\n\n/**\n * Composes `AccessCheckoutTextInput`.\n *\n * - nativeID: string\n * - testID: string\n * - style: StyleProp<AccessCheckoutTextInputStyle>;\n * - placeholder: string\n * - editable: boolean\n */\ninterface AccessCheckoutTextInputProps {\n  nativeID: string;\n  testID?: string;\n  style?: StyleProp<AccessCheckoutTextInputStyle>;\n  placeholder?: string;\n  editable?: boolean;\n}\n\n/**\n * Note: Not all properties apply styling to placeholder text and input text.\n *   textColor: only applies to input text.\n *   fontFamily: applies to both placeholder text and input text.\n *   fontSize:applies to both placeholder text and input text.\n */\ninterface AccessCheckoutTextInputStyle extends ViewStyle {\n  color?: ColorValue;\n  fontFamily?: string;\n  fontSize?: number;\n}\n\n/**\n * Font Changes apply to placeholder text and input text\n */\ninterface RTCAccessCheckoutTextInputFontProps {\n  fontFamily?: string;\n  fontSize?: number;\n}\n\ninterface RTCAccessCheckoutTextInputProps {\n  nativeID: string;\n  testID?: string;\n  style?: StyleProp<ViewStyle>;\n  placeholder?: string;\n  font?: RTCAccessCheckoutTextInputFontProps;\n  editable?: boolean;\n  color?: ColorValue;\n}\n\nconst RTCAccessCheckoutTextInput =\n  requireNativeComponent<RTCAccessCheckoutTextInputProps>(\n    'AccessCheckoutTextInput'\n  );\nconst AccessCheckoutTextInput = (props: AccessCheckoutTextInputProps) => {\n  const { nativeID, testID, style, placeholder, editable } = props;\n  const { color, fontFamily, fontSize, ...otherStyles } = StyleSheet.flatten([\n    style,\n  ]);\n  return (\n    <View style={[otherStyles]}>\n      <RTCAccessCheckoutTextInput\n        nativeID={nativeID}\n        testID={testID}\n        style={[{ flex: 1 }]}\n        placeholder={placeholder}\n        font={{\n          fontFamily,\n          fontSize,\n        }}\n        color={color}\n        editable={editable}\n      />\n    </View>\n  );\n};\n\nexport default AccessCheckoutTextInput;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,sBAAsB,EAEtBC,UAAU,EACVC,IAAI,QAEC,cAAc;;AAGrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;;AAgBA,MAAMC,0BAA0B,GAC9BH,sBAAsB,CACpB,yBACF,CAAC;AACH,MAAMI,uBAAuB,GAAIC,KAAmC,IAAK;EACvE,MAAM;IAAEC,QAAQ;IAAEC,MAAM;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAS,CAAC,GAAGL,KAAK;EAChE,MAAM;IAAEM,KAAK;IAAEC,UAAU;IAAEC,QAAQ;IAAE,GAAGC;EAAY,CAAC,GAAGb,UAAU,CAACc,OAAO,CAAC,CACzEP,KAAK,CACN,CAAC;EACF,oBACET,KAAA,CAAAiB,aAAA,CAACd,IAAI;IAACM,KAAK,EAAE,CAACM,WAAW;EAAE,gBACzBf,KAAA,CAAAiB,aAAA,CAACb,0BAA0B;IACzBG,QAAQ,EAAEA,QAAS;IACnBC,MAAM,EAAEA,MAAO;IACfC,KAAK,EAAE,CAAC;MAAES,IAAI,EAAE;IAAE,CAAC,CAAE;IACrBR,WAAW,EAAEA,WAAY;IACzBS,IAAI,EAAE;MACJN,UAAU;MACVC;IACF,CAAE;IACFF,KAAK,EAAEA,KAAM;IACbD,QAAQ,EAAEA;EAAS,CACpB,CACG,CAAC;AAEX,CAAC;AAED,eAAeN,uBAAuB"}