{"version":3,"names":["AccessCheckoutReactNative","AccessCheckout","constructor","baseUrl","merchantId","_defineProperty","generateSessions","cardDetails","sessionTypes","Promise","resolve","reject","panValue","pan","expiryDateValue","expiryDate","cvcValue","cvc","reactNativeSdkVersion","ReactNativeSdkVersion","then","bridgeSessions","sessions","card","catch","error","generateSessionsPOC","initialiseCardValidation","validationConfig","panId","expiryDateId","cvcId","enablePanFormatting","acceptedCardBrands","initialiseCardValidationPoc","initialiseCardValidationPOC","initialiseCvcOnlyValidation","initialiseCvcOnlyValidationPoc","initialiseCvcOnlyValidationPOC"],"sources":["AccessCheckout.tsx"],"sourcesContent":["import { AccessCheckoutReactNative } from './AccessCheckoutReactNative';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport CardDetails from './session/CardDetails';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport Sessions from './session/Sessions';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport CardValidationConfig from './validation/CardValidationConfig';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport CvcOnlyValidationConfig from './validation/CvcOnlyValidationConfig';\n\nexport default class AccessCheckout {\n  private readonly ReactNativeSdkVersion = '1.0.2';\n  static readonly CardValidationEventType = 'AccessCheckoutCardValidationEvent';\n  static readonly CvcOnlyValidationEventType =\n    'AccessCheckoutCvcOnlyValidationEvent';\n\n  baseUrl: string;\n  merchantId?: string;\n\n  constructor({\n    baseUrl,\n    merchantId,\n  }: {\n    baseUrl: string;\n    merchantId?: string;\n  }) {\n    this.baseUrl = baseUrl;\n    this.merchantId = merchantId;\n  }\n\n  generateSessions(\n    cardDetails: CardDetails,\n    sessionTypes: string[]\n  ): Promise<Sessions> {\n    return new Promise((resolve, reject) => {\n      AccessCheckoutReactNative.generateSessions({\n        baseUrl: this.baseUrl,\n        merchantId: this.merchantId,\n        panValue: cardDetails.pan,\n        expiryDateValue: cardDetails.expiryDate,\n        cvcValue: cardDetails.cvc,\n        sessionTypes,\n        reactNativeSdkVersion: this.ReactNativeSdkVersion,\n      })\n        // eslint-disable-next-line  @typescript-eslint/no-explicit-any, prettier/prettier\n        .then((bridgeSessions: any) => {\n          const sessions: Sessions = {};\n          if (bridgeSessions.card) {\n            sessions.card = bridgeSessions.card;\n          }\n          if (bridgeSessions.cvc) {\n            sessions.cvc = bridgeSessions.cvc;\n          }\n\n          resolve(sessions);\n        })\n        // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n        .catch((error: any) => {\n          reject(error);\n        });\n    });\n  }\n\n  generateSessionsPOC(\n    cardDetails: CardDetails,\n    sessionTypes: string[]\n  ): Promise<Sessions> {\n    return new Promise((resolve, reject) => {\n      AccessCheckoutReactNative.generateSessionsPOC({\n        baseUrl: this.baseUrl,\n        merchantId: this.merchantId,\n        panValue: cardDetails.pan,\n        expiryDateValue: cardDetails.expiryDate,\n        cvcValue: cardDetails.cvc,\n        sessionTypes,\n        reactNativeSdkVersion: this.ReactNativeSdkVersion,\n      })\n        // eslint-disable-next-line  @typescript-eslint/no-explicit-any, prettier/prettier\n        .then((bridgeSessions: any) => {\n          const sessions: Sessions = {};\n          if (bridgeSessions.card) {\n            sessions.card = bridgeSessions.card;\n          }\n          if (bridgeSessions.cvc) {\n            sessions.cvc = bridgeSessions.cvc;\n          }\n\n          resolve(sessions);\n        })\n        // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n        .catch((error: any) => {\n          reject(error);\n        });\n    });\n  }\n\n  initialiseCardValidation(\n    validationConfig: CardValidationConfig\n  ): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      AccessCheckoutReactNative.initialiseCardValidation({\n        baseUrl: this.baseUrl,\n        panId: validationConfig.panId,\n        expiryDateId: validationConfig.expiryDateId,\n        cvcId: validationConfig.cvcId,\n        enablePanFormatting: validationConfig.enablePanFormatting,\n        acceptedCardBrands: validationConfig.acceptedCardBrands,\n      })\n        .then(() => {\n          resolve(true);\n        })\n        // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n        .catch((error: any) => {\n          reject(error);\n        });\n    });\n  }\n  initialiseCardValidationPoc(\n    validationConfig: CardValidationConfig\n  ): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      AccessCheckoutReactNative.initialiseCardValidationPOC({\n        baseUrl: this.baseUrl,\n        panId: validationConfig.panId,\n        expiryDateId: validationConfig.expiryDateId,\n        cvcId: validationConfig.cvcId,\n        enablePanFormatting: validationConfig.enablePanFormatting,\n        acceptedCardBrands: validationConfig.acceptedCardBrands,\n      })\n        .then(() => {\n          resolve(true);\n        })\n        // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n        .catch((error: any) => {\n          reject(error);\n        });\n    });\n  }\n\n  initialiseCvcOnlyValidation(\n    validationConfig: CvcOnlyValidationConfig\n  ): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      AccessCheckoutReactNative.initialiseCvcOnlyValidation({\n        cvcId: validationConfig.cvcId,\n      })\n        .then(() => {\n          resolve(true);\n        })\n        // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n        .catch((error: any) => {\n          reject(error);\n        });\n    });\n  }\n\n  initialiseCvcOnlyValidationPoc(\n    validationConfig: CvcOnlyValidationConfig\n  ): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      AccessCheckoutReactNative.initialiseCvcOnlyValidationPOC({\n        cvcId: validationConfig.cvcId,\n      })\n        .then(() => {\n          resolve(true);\n        })\n        // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n        .catch((error: any) => {\n          reject(error);\n        });\n    });\n  }\n}\n"],"mappings":"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"}