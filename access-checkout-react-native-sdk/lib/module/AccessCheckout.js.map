{"version":3,"names":["AccessCheckoutReactNative","AccessCheckout","constructor","baseUrl","merchantId","_defineProperty","generateSessions","sessionGenerationConfig","sessionTypes","Promise","resolve","reject","panId","expiryDateId","cvcId","reactNativeSdkVersion","ReactNativeSdkVersion","then","bridgeSessions","sessions","card","cvc","catch","error","initialiseCardValidation","validationConfig","enablePanFormatting","acceptedCardBrands","initialiseCvcOnlyValidation"],"sources":["AccessCheckout.tsx"],"sourcesContent":["import AccessCheckoutReactNative from './../src';\nimport type SessionGenerationConfig from './session/SessionGenerationConfig';\nimport type Sessions from './session/Sessions';\n\ninterface InitialiseCardValidationConfig {\n  panId: string;\n  expiryDateId: string;\n  cvcId: string;\n  enablePanFormatting?: boolean;\n  acceptedCardBrands?: string[];\n}\ninterface InitialiseCvcOnlyValidationConfig {\n  cvcId: string;\n}\nexport default class AccessCheckout {\n  private readonly ReactNativeSdkVersion = '3.0.0';\n  static readonly CardValidationEventType = 'AccessCheckoutCardValidationEvent';\n  static readonly CvcOnlyValidationEventType = 'AccessCheckoutCvcOnlyValidationEvent';\n\n  baseUrl: string;\n  merchantId?: string;\n\n  constructor({ baseUrl, merchantId }: { baseUrl: string; merchantId?: string }) {\n    this.baseUrl = baseUrl;\n    this.merchantId = merchantId;\n  }\n\n  generateSessions(sessionGenerationConfig: SessionGenerationConfig, sessionTypes: string[]): Promise<Sessions> {\n    return new Promise((resolve, reject) => {\n      AccessCheckoutReactNative.generateSessions({\n        baseUrl: this.baseUrl,\n        merchantId: this.merchantId,\n        panId: sessionGenerationConfig.panId,\n        expiryDateId: sessionGenerationConfig.expiryDateId,\n        cvcId: sessionGenerationConfig.cvcId,\n        sessionTypes,\n        reactNativeSdkVersion: this.ReactNativeSdkVersion,\n      })\n        // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n        .then((bridgeSessions: any) => {\n          const sessions: Sessions = {};\n          if (bridgeSessions.card) {\n            sessions.card = bridgeSessions.card;\n          }\n          if (bridgeSessions.cvc) {\n            sessions.cvc = bridgeSessions.cvc;\n          }\n\n          resolve(sessions);\n        })\n        // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n        .catch((error: any) => {\n          reject(error);\n        });\n    });\n  }\n\n  initialiseCardValidation(validationConfig: InitialiseCardValidationConfig): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      AccessCheckoutReactNative.initialiseCardValidation({\n        baseUrl: this.baseUrl,\n        panId: validationConfig.panId,\n        expiryDateId: validationConfig.expiryDateId,\n        cvcId: validationConfig.cvcId,\n        enablePanFormatting: validationConfig.enablePanFormatting,\n        acceptedCardBrands: validationConfig.acceptedCardBrands,\n      })\n        .then(() => {\n          resolve(true);\n        })\n        // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n        .catch((error: any) => {\n          reject(error);\n        });\n    });\n  }\n\n  initialiseCvcOnlyValidation(validationConfig: InitialiseCvcOnlyValidationConfig): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      AccessCheckoutReactNative.initialiseCvcOnlyValidation({\n        cvcId: validationConfig.cvcId,\n      })\n        .then(() => {\n          resolve(true);\n        })\n        // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n        .catch((error: any) => {\n          reject(error);\n        });\n    });\n  }\n}\n"],"mappings":";;;AAAA,OAAOA,yBAAyB,MAAM,UAAU;AAchD,eAAe,MAAMC,cAAc,CAAC;EAQlCC,WAAWA,CAAC;IAAEC,OAAO;IAAEC;EAAqD,CAAC,EAAE;IAAAC,eAAA,gCAPtC,OAAO;IAAAA,eAAA;IAAAA,eAAA;IAQ9C,IAAI,CAACF,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,UAAU,GAAGA,UAAU;EAC9B;EAEAE,gBAAgBA,CAACC,uBAAgD,EAAEC,YAAsB,EAAqB;IAC5G,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCX,yBAAyB,CAACM,gBAAgB,CAAC;QACzCH,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBC,UAAU,EAAE,IAAI,CAACA,UAAU;QAC3BQ,KAAK,EAAEL,uBAAuB,CAACK,KAAK;QACpCC,YAAY,EAAEN,uBAAuB,CAACM,YAAY;QAClDC,KAAK,EAAEP,uBAAuB,CAACO,KAAK;QACpCN,YAAY;QACZO,qBAAqB,EAAE,IAAI,CAACC;MAC9B,CAAC;MACC;MAAA,CACCC,IAAI,CAAEC,cAAmB,IAAK;QAC7B,MAAMC,QAAkB,GAAG,CAAC,CAAC;QAC7B,IAAID,cAAc,CAACE,IAAI,EAAE;UACvBD,QAAQ,CAACC,IAAI,GAAGF,cAAc,CAACE,IAAI;QACrC;QACA,IAAIF,cAAc,CAACG,GAAG,EAAE;UACtBF,QAAQ,CAACE,GAAG,GAAGH,cAAc,CAACG,GAAG;QACnC;QAEAX,OAAO,CAACS,QAAQ,CAAC;MACnB,CAAC;MACD;MAAA,CACCG,KAAK,CAAEC,KAAU,IAAK;QACrBZ,MAAM,CAACY,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;EAEAC,wBAAwBA,CAACC,gBAAgD,EAAoB;IAC3F,OAAO,IAAIhB,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCX,yBAAyB,CAACwB,wBAAwB,CAAC;QACjDrB,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBS,KAAK,EAAEa,gBAAgB,CAACb,KAAK;QAC7BC,YAAY,EAAEY,gBAAgB,CAACZ,YAAY;QAC3CC,KAAK,EAAEW,gBAAgB,CAACX,KAAK;QAC7BY,mBAAmB,EAAED,gBAAgB,CAACC,mBAAmB;QACzDC,kBAAkB,EAAEF,gBAAgB,CAACE;MACvC,CAAC,CAAC,CACCV,IAAI,CAAC,MAAM;QACVP,OAAO,CAAC,IAAI,CAAC;MACf,CAAC;MACD;MAAA,CACCY,KAAK,CAAEC,KAAU,IAAK;QACrBZ,MAAM,CAACY,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;EAEAK,2BAA2BA,CAACH,gBAAmD,EAAoB;IACjG,OAAO,IAAIhB,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCX,yBAAyB,CAAC4B,2BAA2B,CAAC;QACpDd,KAAK,EAAEW,gBAAgB,CAACX;MAC1B,CAAC,CAAC,CACCG,IAAI,CAAC,MAAM;QACVP,OAAO,CAAC,IAAI,CAAC;MACf,CAAC;MACD;MAAA,CACCY,KAAK,CAAEC,KAAU,IAAK;QACrBZ,MAAM,CAACY,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;AACF;AAAClB,eAAA,CA7EoBJ,cAAc,6BAES,mCAAmC;AAAAI,eAAA,CAF1DJ,cAAc,gCAGY,sCAAsC"}