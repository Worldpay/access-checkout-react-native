{"version":3,"names":["MerchantCardValidationConfig","MerchantCardConfig","useCardConfig","props","cardConfig","panId","expiryDateId","cvcId","validationConfig","acceptedCardBrands","enablePanFormatting","validationListener"],"sources":["useCardConfig.ts"],"sourcesContent":["import type { CardValidationEventListener } from '../validation/CardValidationEventListener';\nimport { MerchantCardValidationConfig } from '../validation/MerchantCardValidationConfig';\nimport MerchantCardConfig from '../config/MerchantCardConfig';\n\nexport interface CardValidationConfig {\n  acceptedCardBrands?: string[];\n  enablePanFormatting?: boolean;\n  validationListener: CardValidationEventListener;\n}\nexport interface UseCardConfig {\n  panId: string;\n  expiryDateId: string;\n  cvcId: string;\n  validationConfig?: CardValidationConfig;\n}\n\nexport const useCardConfig = (props: UseCardConfig): MerchantCardConfig => {\n  const cardConfig = new MerchantCardConfig({\n    panId: props.panId,\n    expiryDateId: props.expiryDateId,\n    cvcId: props.cvcId,\n  });\n\n  if (props.validationConfig) {\n    cardConfig.validationConfig = new MerchantCardValidationConfig({\n      acceptedCardBrands: props.validationConfig.acceptedCardBrands,\n      enablePanFormatting: props.validationConfig.enablePanFormatting,\n      validationListener: props.validationConfig.validationListener,\n    });\n  }\n\n  return cardConfig;\n};\n"],"mappings":"AACA,SAASA,4BAA4B,QAAQ,4CAA4C;AACzF,OAAOC,kBAAkB,MAAM,8BAA8B;AAc7D,OAAO,MAAMC,aAAa,GAAIC,KAAoB,IAAyB;EACzE,MAAMC,UAAU,GAAG,IAAIH,kBAAkB,CAAC;IACxCI,KAAK,EAAEF,KAAK,CAACE,KAAK;IAClBC,YAAY,EAAEH,KAAK,CAACG,YAAY;IAChCC,KAAK,EAAEJ,KAAK,CAACI;EACf,CAAC,CAAC;EAEF,IAAIJ,KAAK,CAACK,gBAAgB,EAAE;IAC1BJ,UAAU,CAACI,gBAAgB,GAAG,IAAIR,4BAA4B,CAAC;MAC7DS,kBAAkB,EAAEN,KAAK,CAACK,gBAAgB,CAACC,kBAAkB;MAC7DC,mBAAmB,EAAEP,KAAK,CAACK,gBAAgB,CAACE,mBAAmB;MAC/DC,kBAAkB,EAAER,KAAK,CAACK,gBAAgB,CAACG;IAC7C,CAAC,CAAC;EACJ;EAEA,OAAOP,UAAU;AACnB,CAAC","ignoreList":[]}