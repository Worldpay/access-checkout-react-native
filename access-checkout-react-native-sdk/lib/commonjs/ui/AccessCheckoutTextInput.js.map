{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_RCTAccessCheckoutTextInput","obj","__esModule","default","AccessCheckoutTextInput","props","nativeID","testID","style","placeholder","editable","color","fontFamily","fontSize","fontStyle","fontWeight","height","otherStyles","StyleSheet","flatten","viewStyles","Object","keys","length","createElement","View","RTCAccessCheckoutTextInput","flex","font","exports"],"sources":["AccessCheckoutTextInput.tsx"],"sourcesContent":["import React from 'react';\nimport { type ColorValue, type StyleProp, StyleSheet, View, type ViewStyle } from 'react-native';\nimport { RTCAccessCheckoutTextInput } from './RCTAccessCheckoutTextInput';\n\n/**\n * Composes `AccessCheckoutTextInput`.\n * Note: If no style.height is provided height is defaulted to make the component visible\n * - nativeID: string\n * - testID: string\n * - style: StyleProp<AccessCheckoutTextInputStyle>;\n * - placeholder: string\n * - editable: boolean\n */\nexport interface AccessCheckoutTextInputProps {\n  nativeID: string;\n  testID?: string;\n  style?: StyleProp<AccessCheckoutTextInputStyle>;\n  placeholder?: string;\n  editable?: boolean;\n}\n\n/**\n * Note: Not all properties apply styling to both placeholder text and input text.\n *   textColor: only applies to input text.\n *   fontFamily: applies to both placeholder text and input text.\n *   fontSize: applies to both placeholder text and input text.\n *   fontStyle: applies to both placeholder text and input text.\n *   fontWeight: applies to both placeholder text and input text.\n */\nexport type AccessCheckoutTextInputFontStyle = 'normal' | 'italic' | undefined;\nexport type AccessCheckoutTextInputFontWeight =\n  | 'normal'\n  | 'bold'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\nexport interface AccessCheckoutTextInputStyle extends ViewStyle {\n  color?: ColorValue;\n  fontFamily?: string;\n  fontSize?: number;\n  fontStyle?: AccessCheckoutTextInputFontStyle;\n  // Specifies font weight. The values 'normal' and 'bold' are supported for most fonts. Not all fonts have a variant for each of the numeric values, in that case the closest one is chosen.\n  fontWeight?: AccessCheckoutTextInputFontWeight;\n}\n\nexport const AccessCheckoutTextInput: React.FC<AccessCheckoutTextInputProps> = (props) => {\n  const { nativeID, testID, style, placeholder, editable } = props;\n\n  const {\n    color,\n    fontFamily,\n    fontSize,\n    fontStyle,\n    fontWeight,\n    height = 40,\n    ...otherStyles\n  } = StyleSheet.flatten([style]);\n\n  // Check if other styles are remaining before assigning it to the view container this helps to prevent passing in\n  // an empty object wo the view container\n  const viewStyles = Object.keys(otherStyles).length ? [{ height }, otherStyles] : [{ height }];\n\n  return (\n    <View testID={`${testID}-view`} style={viewStyles}>\n      <RTCAccessCheckoutTextInput\n        nativeID={nativeID}\n        testID={testID}\n        style={[{ flex: 1 }]}\n        placeholder={placeholder}\n        font={{\n          fontFamily,\n          fontSize,\n          fontWeight,\n          fontStyle,\n        }}\n        color={color}\n        editable={editable}\n      />\n    </View>\n  );\n};\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,2BAAA,GAAAF,OAAA;AAA0E,SAAAD,uBAAAI,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAwBO,MAAMG,uBAA+D,GAAIC,KAAK,IAAK;EACxF,MAAM;IAAEC,QAAQ;IAAEC,MAAM;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAS,CAAC,GAAGL,KAAK;EAEhE,MAAM;IACJM,KAAK;IACLC,UAAU;IACVC,QAAQ;IACRC,SAAS;IACTC,UAAU;IACVC,MAAM,GAAG,EAAE;IACX,GAAGC;EACL,CAAC,GAAGC,uBAAU,CAACC,OAAO,CAAC,CAACX,KAAK,CAAC,CAAC;;EAE/B;EACA;EACA,MAAMY,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACL,WAAW,CAAC,CAACM,MAAM,GAAG,CAAC;IAAEP;EAAO,CAAC,EAAEC,WAAW,CAAC,GAAG,CAAC;IAAED;EAAO,CAAC,CAAC;EAE7F,oBACEpB,MAAA,CAAAO,OAAA,CAAAqB,aAAA,CAACzB,YAAA,CAAA0B,IAAI;IAAClB,MAAM,EAAG,GAAEA,MAAO,OAAO;IAACC,KAAK,EAAEY;EAAW,gBAChDxB,MAAA,CAAAO,OAAA,CAAAqB,aAAA,CAACxB,2BAAA,CAAA0B,0BAA0B;IACzBpB,QAAQ,EAAEA,QAAS;IACnBC,MAAM,EAAEA,MAAO;IACfC,KAAK,EAAE,CAAC;MAAEmB,IAAI,EAAE;IAAE,CAAC,CAAE;IACrBlB,WAAW,EAAEA,WAAY;IACzBmB,IAAI,EAAE;MACJhB,UAAU;MACVC,QAAQ;MACRE,UAAU;MACVD;IACF,CAAE;IACFH,KAAK,EAAEA,KAAM;IACbD,QAAQ,EAAEA;EAAS,CACpB,CACG,CAAC;AAEX,CAAC;AAACmB,OAAA,CAAAzB,uBAAA,GAAAA,uBAAA","ignoreList":[]}