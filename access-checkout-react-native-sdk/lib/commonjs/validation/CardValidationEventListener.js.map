{"version":3,"sources":["CardValidationEventListener.ts"],"names":["cardValidationNativeEventListenerOf","delegate","event","type","onCardBrandChanged","value","onPanValidChanged","isValid","onExpiryDateValidChanged","onCvcValidChanged","onValidationSuccess"],"mappings":";;;;;;;AAAA;AAeO,SAASA,mCAAT,CACLC,QADK,EAEL;AACA,SAAO,UAAUC,KAAV,EAAsB;AAC3B,QAAIA,KAAK,CAACC,IAAN,KAAe,OAAf,IAA0BF,QAAQ,CAACG,kBAAvC,EAA2D;AACzD,UAAIF,KAAK,CAACG,KAAN,KAAgB,IAApB,EAA0B;AACxBJ,QAAAA,QAAQ,CAACG,kBAAT;AACD,OAFD,MAEO;AACLH,QAAAA,QAAQ,CAACG,kBAAT,CAA4BF,KAAK,CAACG,KAAlC;AACD;AACF;;AAED,QAAIH,KAAK,CAACC,IAAN,KAAe,KAAf,IAAwBF,QAAQ,CAACK,iBAArC,EAAwD;AACtDL,MAAAA,QAAQ,CAACK,iBAAT,CAA2BJ,KAAK,CAACK,OAAjC;AACD;;AAED,QAAIL,KAAK,CAACC,IAAN,KAAe,YAAf,IAA+BF,QAAQ,CAACO,wBAA5C,EAAsE;AACpEP,MAAAA,QAAQ,CAACO,wBAAT,CAAkCN,KAAK,CAACK,OAAxC;AACD;;AAED,QAAIL,KAAK,CAACC,IAAN,KAAe,KAAf,IAAwBF,QAAQ,CAACQ,iBAArC,EAAwD;AACtDR,MAAAA,QAAQ,CAACQ,iBAAT,CAA2BP,KAAK,CAACK,OAAjC;AACD;;AAED,QAAIL,KAAK,CAACC,IAAN,KAAe,KAAf,IAAwBF,QAAQ,CAACS,mBAArC,EAA0D;AACxDT,MAAAA,QAAQ,CAACS,mBAAT;AACD;AACF,GAxBD;AAyBD","sourcesContent":["// @ts-ignore\nimport { Brand } from './Brand';\n\nexport interface CardValidationEventListener {\n  onCardBrandChanged?(brand?: Brand): void;\n\n  onPanValidChanged?(isValid: boolean): void;\n\n  onExpiryDateValidChanged?(isValid: boolean): void;\n\n  onCvcValidChanged?(isValid: boolean): void;\n\n  onValidationSuccess?(): void;\n}\n\nexport function cardValidationNativeEventListenerOf(\n  delegate: CardValidationEventListener\n) {\n  return function (event: any) {\n    if (event.type === 'brand' && delegate.onCardBrandChanged) {\n      if (event.value === null) {\n        delegate.onCardBrandChanged();\n      } else {\n        delegate.onCardBrandChanged(event.value as Brand);\n      }\n    }\n\n    if (event.type === 'pan' && delegate.onPanValidChanged) {\n      delegate.onPanValidChanged(event.isValid);\n    }\n\n    if (event.type === 'expiryDate' && delegate.onExpiryDateValidChanged) {\n      delegate.onExpiryDateValidChanged(event.isValid);\n    }\n\n    if (event.type === 'cvc' && delegate.onCvcValidChanged) {\n      delegate.onCvcValidChanged(event.isValid);\n    }\n\n    if (event.type === 'all' && delegate.onValidationSuccess) {\n      delegate.onValidationSuccess();\n    }\n  };\n}\n"]}