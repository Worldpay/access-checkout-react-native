{"version":3,"names":["_index","require","_useCardValidation","_useCvcOnlyValidation","useAccessCheckout","baseUrl","checkoutId","config","accessCheckout","AccessCheckout","merchantId","CardConfig","_config$validationCon","_config$validationCon2","_config$validationCon3","initialiseCardValidation","useCardValidation","cardValidationConfig","panId","expiryDateId","cvcId","enablePanFormatting","validationConfig","acceptedCardBrands","validationListener","generateSessions","sessionTypes","initialiseValidation","_config$validationCon4","initialiseCvcOnlyValidation","useCvcOnlyValidation","cvcOnlyValidationConfig","generateCvcOnlySession","exports"],"sources":["useAccessCheckout.ts"],"sourcesContent":["import {\n  AccessCheckout,\n  CardConfig,\n  type CardValidationEventListener,\n  CvcOnlyConfig,\n  CvcOnlyValidationEventListener,\n  Sessions,\n} from '../index';\nimport { useCardValidation } from './useCardValidation';\nimport { useCvcOnlyValidation } from './useCvcOnlyValidation';\n\nexport interface UseAccessCheckoutExports {\n  initialiseValidation: () => Promise<boolean>;\n  generateSessions: (sessionTypes: string[]) => Promise<Sessions>;\n}\n\nexport interface UseAccessCheckout {\n  baseUrl: string;\n  checkoutId: string;\n  config: CardConfig | CvcOnlyConfig;\n}\n\nexport const useAccessCheckout = ({ baseUrl, checkoutId, config }: UseAccessCheckout): UseAccessCheckoutExports => {\n  const accessCheckout = new AccessCheckout({\n    baseUrl: baseUrl,\n    merchantId: checkoutId,\n  });\n\n  /**\n   * Implementation note: Decided to use classes to benefit from instance checking.\n   * If using interfaces or types a \"type guard\" could have been used. the trade off being having to check for\n   * a specific property that would be unique to that interface/type which in theory it introduces another point of\n   * failure if the property was to be renamed and not updated in the type guard.\n   */\n  if (config instanceof CardConfig) {\n    const { initialiseCardValidation } = useCardValidation({\n      accessCheckout,\n      cardValidationConfig: {\n        panId: config.panId,\n        expiryDateId: config.expiryDateId,\n        cvcId: config.cvcId,\n        enablePanFormatting: config.validationConfig?.enablePanFormatting,\n        acceptedCardBrands: config.validationConfig?.acceptedCardBrands,\n      },\n      validationListener: config.validationConfig?.validationListener as CardValidationEventListener,\n    });\n\n    const generateSessions = (sessionTypes: string[]) =>\n      accessCheckout.generateSessions(\n        {\n          panId: config.panId,\n          expiryDateId: config.expiryDateId,\n          cvcId: config.cvcId,\n        },\n        sessionTypes\n      );\n\n    return {\n      initialiseValidation: initialiseCardValidation,\n      generateSessions,\n    };\n  } else {\n    const { initialiseCvcOnlyValidation } = useCvcOnlyValidation({\n      accessCheckout,\n      cvcOnlyValidationConfig: { cvcId: config.cvcId },\n      validationListener: config.validationConfig?.validationListener as CvcOnlyValidationEventListener,\n    });\n\n    const generateCvcOnlySession = (sessionTypes: string[]) =>\n      accessCheckout.generateSessions(\n        {\n          cvcId: config.cvcId,\n        },\n        sessionTypes\n      );\n\n    return {\n      initialiseValidation: initialiseCvcOnlyValidation,\n      generateSessions: generateCvcOnlySession,\n    };\n  }\n};\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAQA,IAAAC,kBAAA,GAAAD,OAAA;AACA,IAAAE,qBAAA,GAAAF,OAAA;AAaO,MAAMG,iBAAiB,GAAGA,CAAC;EAAEC,OAAO;EAAEC,UAAU;EAAEC;AAA0B,CAAC,KAA+B;EACjH,MAAMC,cAAc,GAAG,IAAIC,qBAAc,CAAC;IACxCJ,OAAO,EAAEA,OAAO;IAChBK,UAAU,EAAEJ;EACd,CAAC,CAAC;;EAEF;AACF;AACA;AACA;AACA;AACA;EACE,IAAIC,MAAM,YAAYI,iBAAU,EAAE;IAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;IAChC,MAAM;MAAEC;IAAyB,CAAC,GAAG,IAAAC,oCAAiB,EAAC;MACrDR,cAAc;MACdS,oBAAoB,EAAE;QACpBC,KAAK,EAAEX,MAAM,CAACW,KAAK;QACnBC,YAAY,EAAEZ,MAAM,CAACY,YAAY;QACjCC,KAAK,EAAEb,MAAM,CAACa,KAAK;QACnBC,mBAAmB,GAAAT,qBAAA,GAAEL,MAAM,CAACe,gBAAgB,cAAAV,qBAAA,uBAAvBA,qBAAA,CAAyBS,mBAAmB;QACjEE,kBAAkB,GAAAV,sBAAA,GAAEN,MAAM,CAACe,gBAAgB,cAAAT,sBAAA,uBAAvBA,sBAAA,CAAyBU;MAC/C,CAAC;MACDC,kBAAkB,GAAAV,sBAAA,GAAEP,MAAM,CAACe,gBAAgB,cAAAR,sBAAA,uBAAvBA,sBAAA,CAAyBU;IAC/C,CAAC,CAAC;IAEF,MAAMC,gBAAgB,GAAIC,YAAsB,IAC9ClB,cAAc,CAACiB,gBAAgB,CAC7B;MACEP,KAAK,EAAEX,MAAM,CAACW,KAAK;MACnBC,YAAY,EAAEZ,MAAM,CAACY,YAAY;MACjCC,KAAK,EAAEb,MAAM,CAACa;IAChB,CAAC,EACDM,YACF,CAAC;IAEH,OAAO;MACLC,oBAAoB,EAAEZ,wBAAwB;MAC9CU;IACF,CAAC;EACH,CAAC,MAAM;IAAA,IAAAG,sBAAA;IACL,MAAM;MAAEC;IAA4B,CAAC,GAAG,IAAAC,0CAAoB,EAAC;MAC3DtB,cAAc;MACduB,uBAAuB,EAAE;QAAEX,KAAK,EAAEb,MAAM,CAACa;MAAM,CAAC;MAChDI,kBAAkB,GAAAI,sBAAA,GAAErB,MAAM,CAACe,gBAAgB,cAAAM,sBAAA,uBAAvBA,sBAAA,CAAyBJ;IAC/C,CAAC,CAAC;IAEF,MAAMQ,sBAAsB,GAAIN,YAAsB,IACpDlB,cAAc,CAACiB,gBAAgB,CAC7B;MACEL,KAAK,EAAEb,MAAM,CAACa;IAChB,CAAC,EACDM,YACF,CAAC;IAEH,OAAO;MACLC,oBAAoB,EAAEE,2BAA2B;MACjDJ,gBAAgB,EAAEO;IACpB,CAAC;EACH;AACF,CAAC;AAACC,OAAA,CAAA7B,iBAAA,GAAAA,iBAAA"}