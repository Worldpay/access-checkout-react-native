{"version":3,"names":["_react","require","_reactNative","_AccessCheckout","_interopRequireDefault","_AccessCheckoutReactNative","_CardValidationEventListener","obj","__esModule","default","useCardValidationEventListener","merchantListener","useEffect","nativeEventListener","cardValidationNativeEventListenerOf","nativeEventEmitter","NativeEventEmitter","AccessCheckoutReactNative","eventSubscription","addListener","AccessCheckout","CardValidationEventType","remove","useCardValidation","accessCheckout","cardValidationConfig","initialiseCardValidation"],"sources":["useCardValidation.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport { NativeEventEmitter } from 'react-native';\nimport AccessCheckout from '../AccessCheckout';\nimport AccessCheckoutReactNative from '../AccessCheckoutReactNative';\nimport {\n  CardValidationEventListener,\n  cardValidationNativeEventListenerOf,\n} from '../validation/CardValidationEventListener';\n\nexport function useCardValidationEventListener(\n  merchantListener: CardValidationEventListener\n) {\n  useEffect(() => {\n    const nativeEventListener =\n      cardValidationNativeEventListenerOf(merchantListener);\n    const nativeEventEmitter = new NativeEventEmitter(\n      AccessCheckoutReactNative\n    );\n\n    const eventSubscription = nativeEventEmitter.addListener(\n      AccessCheckout.CardValidationEventType,\n      nativeEventListener\n    );\n\n    return () => {\n      eventSubscription.remove();\n    };\n  }, []);\n}\n\ninterface UseCardValidationHook {\n  accessCheckout: AccessCheckout;\n  cardValidationConfig: {\n    panId: string;\n    expiryDateId: string;\n    cvcId: string;\n    enablePanFormatting?: boolean;\n    acceptedCardBrands?: string[];\n  };\n  merchantListener: CardValidationEventListener;\n}\nexport function useCardValidation({\n  accessCheckout,\n  cardValidationConfig,\n  merchantListener,\n}: UseCardValidationHook) {\n  useCardValidationEventListener(merchantListener);\n  const initialiseCardValidation = () => {\n    return accessCheckout.initialiseCardValidation(cardValidationConfig);\n  };\n\n  return { initialiseCardValidation };\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,eAAA,GAAAC,sBAAA,CAAAH,OAAA;AACA,IAAAI,0BAAA,GAAAD,sBAAA,CAAAH,OAAA;AACA,IAAAK,4BAAA,GAAAL,OAAA;AAGmD,SAAAG,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAE5C,SAASG,8BAA8BA,CAC5CC,gBAA6C,EAC7C;EACA,IAAAC,gBAAS,EAAC,MAAM;IACd,MAAMC,mBAAmB,GACvB,IAAAC,gEAAmC,EAACH,gBAAgB,CAAC;IACvD,MAAMI,kBAAkB,GAAG,IAAIC,+BAAkB,CAC/CC,kCACF,CAAC;IAED,MAAMC,iBAAiB,GAAGH,kBAAkB,CAACI,WAAW,CACtDC,uBAAc,CAACC,uBAAuB,EACtCR,mBACF,CAAC;IAED,OAAO,MAAM;MACXK,iBAAiB,CAACI,MAAM,CAAC,CAAC;IAC5B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;AACR;AAaO,SAASC,iBAAiBA,CAAC;EAChCC,cAAc;EACdC,oBAAoB;EACpBd;AACqB,CAAC,EAAE;EACxBD,8BAA8B,CAACC,gBAAgB,CAAC;EAChD,MAAMe,wBAAwB,GAAGA,CAAA,KAAM;IACrC,OAAOF,cAAc,CAACE,wBAAwB,CAACD,oBAAoB,CAAC;EACtE,CAAC;EAED,OAAO;IAAEC;EAAyB,CAAC;AACrC"}